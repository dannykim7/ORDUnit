<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- 업로드 파일에 접근하는 폴더이름 -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/upload/**" location="/upload/" />
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/js/**" location="/js/" />


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- xml에 bean으로 등록하면 자동생성 jsp를 보여주기위해 정보를 합성? -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 파일이 올라오면 처리해줄 프로그램을 뭘로 할지 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	</beans:bean>

	<!-- <context:component-scan base-package="org.zerock.controller" /> -->
	<!-- <context:component-scan base-package="org.zerock.exception" /> -->


	<context:annotation-config></context:annotation-config>

	<!-- URL과 상관이 있는 객체 base-package로 설정된 위치의 아래 찾아보기 -> 자동생성 @Controller, @RestController -->
	<context:component-scan
		base-package="com.webjjang" />
		
		<!-- AOP 설정 -->
		<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
		
 <interceptors>
  <interceptor>
   <mapping path="/**" />
   <beans:bean class="com.webjjang.util.intercepter.AuthorityIntercepter" />
  </interceptor>
 </interceptors>

</beans:beans>
